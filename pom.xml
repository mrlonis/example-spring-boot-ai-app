<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.0</version>
    <relativePath/>
  </parent>
  <groupId>com.mrlonis.example.ai</groupId>
  <artifactId>example-spring-boot-ai-app</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>example-spring-boot-ai-app</name>
  <description>Demo project for Spring Boot</description>
  <properties>
    <asciidoctor-maven-plugin.version>3.2.0</asciidoctor-maven-plugin.version>
    <cleanthat.version>2.22</cleanthat.version>
    <exec-maven-plugin.version>3.5.1</exec-maven-plugin.version>
    <git-build-hook-maven-plugin.version>3.5.0</git-build-hook-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
    <java.version>21</java.version>
    <okhttp-bom.version>4.12.0</okhttp-bom.version>
    <org.checkerframework.version>3.49.4</org.checkerframework.version>
    <palantir-java-format.version>2.68.0</palantir-java-format.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
    <spotless.version>2.44.5</spotless.version>
    <spring-ai.version>1.0.0</spring-ai.version>
    <spring-cloud-contract-maven-plugin.version>4.3.0</spring-cloud-contract-maven-plugin.version>
    <spring-cloud.version>2025.0.0</spring-cloud.version>
    <spring-restdocs.version>3.0.3</spring-restdocs.version>
    <testcontainers.version>1.21.1</testcontainers.version>
    <versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp-bom</artifactId>
        <version>${okhttp-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.ai</groupId>
        <artifactId>spring-ai-bom</artifactId>
        <version>${spring-ai.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.palantir.javaformat</groupId>
        <artifactId>palantir-java-format</artifactId>
        <version>${palantir-java-format.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.solven-eu.cleanthat</groupId>
        <artifactId>spotless</artifactId>
        <version>${cleanthat.version}</version>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>${org.checkerframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>${org.checkerframework.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-database-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-advisors-vector-store</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-markdown-document-reader</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-pdf-document-reader</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-starter-model-chat-memory-repository-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-starter-model-openai</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-starter-vector-store-pgvector</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity6</artifactId>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-asciidoctor</artifactId>
      <version>${spring-restdocs.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-spring-boot-docker-compose</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-docker-compose</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.ai</groupId>
      <artifactId>spring-ai-spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-verifier</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-mockmvc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <configuration>
            <ruleSet>
              <ignoreVersions>
                <ignoreVersion>
                  <type>regex</type>
                  <version>.*[-.]?(?i:alpha|beta|rc|cr|m|milestone|preview|snapshot|dev|final)([.-]?\d*)?$</version>
                </ignoreVersion>
              </ignoreVersions>
            </ruleSet>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <formats>
            <format>
              <includes>
                <include>.mvn/wrapper/maven-wrapper.properties</include>
                <include>.gitattributes</include>
                <include>.gitignore</include>
                <include>.gitmodules</include>
                <include>lombok.config</include>
                <include>mvnw</include>
              </includes>
              <trimTrailingWhitespace/>
              <endWithNewline/>
            </format>
            <format>
              <includes>
                <include>mvnw.cmd</include>
              </includes>
              <trimTrailingWhitespace/>
              <endWithNewline/>
            </format>
            <format>
              <includes>
                <include>**/*.css</include>
                <include>**/*.html</include>
                <include>**/*.json</include>
                <include>**/*.xml</include>
                <include>**/*.yaml</include>
                <include>**/*.yml</include>
                <include>.prettierrc</include>
              </includes>
              <excludes>
                <exclude>.hooks/**/*</exclude>
                <exclude>.idea/**/*</exclude>
                <exclude>newman/**/*</exclude>
                <exclude>**/target/**/*</exclude>
                <exclude>**/pom.xml</exclude>
              </excludes>
              <prettier>
                <npmInstallCache>true</npmInstallCache>
                <devDependencyProperties>
                  <property>
                    <name>prettier</name>
                    <value>^3</value>
                  </property>
                  <property>
                    <name>@prettier/plugin-xml</name>
                    <value>^3</value>
                  </property>
                </devDependencyProperties>
                <config>
                  <printWidth>120</printWidth>
                  <xmlSelfClosingSpace>false</xmlSelfClosingSpace>
                  <xmlSortAttributesByKey>true</xmlSortAttributesByKey>
                  <xmlWhitespaceSensitivity>strict</xmlWhitespaceSensitivity>
                  <plugins>@prettier/plugin-xml</plugins>
                </config>
              </prettier>
              <trimTrailingWhitespace/>
              <endWithNewline/>
            </format>
          </formats>
          <java>
            <cleanthat>
              <version>${cleanthat.version}</version>
              <mutators>
                <mutator>SafeAndConsensual</mutator>
                <mutator>SafeButNotConsensual</mutator>
              </mutators>
            </cleanthat>
            <palantirJavaFormat>
              <version>${palantir-java-format.version}</version>
              <style>PALANTIR</style>
              <formatJavadoc>true</formatJavadoc>
            </palantirJavaFormat>
            <formatAnnotations/>
            <removeUnusedImports/>
            <importOrder/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </java>
          <pom>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <lineSeparator>\n</lineSeparator>
              <keepBlankLines>false</keepBlankLines>
              <sortDependencies>scope,groupId,artifactId</sortDependencies>
              <sortDependencyExclusions>groupId,artifactId</sortDependencyExclusions>
              <sortDependencyManagement>scope,groupId,artifactId</sortDependencyManagement>
              <sortExecutions>true</sortExecutions>
              <sortModules>true</sortModules>
              <sortPlugins>groupId,artifactId</sortPlugins>
              <sortProperties>true</sortProperties>
            </sortPom>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </pom>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>.hooks/**/*.md</exclude>
              <exclude>**/target/**/*.md</exclude>
            </excludes>
            <flexmark/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </markdown>
          <sql>
            <includes>
              <include>**/*.sql</include>
            </includes>
            <excludes>
              <exclude>.hooks/**/*</exclude>
              <exclude>.idea/**/*</exclude>
              <exclude>**/target/**/*</exclude>
            </excludes>
            <prettier>
              <npmInstallCache>true</npmInstallCache>
              <devDependencyProperties>
                <property>
                  <name>prettier</name>
                  <value>^3</value>
                </property>
                <property>
                  <name>prettier-plugin-sql</name>
                  <value>~0.18</value>
                </property>
              </devDependencyProperties>
              <config>
                <printWidth>120</printWidth>
                <plugins>prettier-plugin-sql</plugins>
              </config>
            </prettier>
          </sql>
          <groovy>
            <includes>
              <include>src/test/resources/**/*.groovy</include>
            </includes>
            <importOrder/>
            <removeSemicolons/>
            <greclipse/>
          </groovy>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.rudikershaw.gitbuildhook</groupId>
        <artifactId>git-build-hook-maven-plugin</artifactId>
        <version>${git-build-hook-maven-plugin.version}</version>
        <configuration>
          <installHooks>
            <pre-commit>.hooks/pre-commit</pre-commit>
            <post-commit>.hooks/post-commit</post-commit>
          </installHooks>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </path>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <arg>-proc:full</arg>
          </compilerArgs>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.8</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <argLine>${argLine}</argLine>
          <environmentVariables>
            <OPENAI_API_KEY>${OPENAI_API_KEY}</OPENAI_API_KEY>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${argLine} -XX:+EnableDynamicAgentLoading</argLine>
          <environmentVariables>
            <OPENAI_API_KEY>${OPENAI_API_KEY}</OPENAI_API_KEY>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor-maven-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-asciidoctor</artifactId>
            <version>${spring-restdocs.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-docs</id>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <backend>html</backend>
              <doctype>book</doctype>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>${properties-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <files>
                <file>${project.basedir}/.env</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
              <goal>report</goal>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <jvmArguments>-DOPENAI_API_KEY=${OPENAI_API_KEY}</jvmArguments>
          <environmentVariables>
            <OPENAI_API_KEY>${OPENAI_API_KEY}</OPENAI_API_KEY>
          </environmentVariables>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-maven-plugin</artifactId>
        <version>${spring-cloud-contract-maven-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <baseClassForTests>com.mrlonis.example.ai.test.ContractBase</baseClassForTests>
          <failOnNoContracts>false</failOnNoContracts>
          <testFramework>JUNIT5</testFramework>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>local-development</id>
      <activation>
        <property>
          <name>!env.SOME_ENV_VAR</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-maven-plugin.version}</version>
            <inherited>false</inherited>
            <executions>
              <execution>
                <id>git submodule update</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>initialize</phase>
                <configuration>
                  <executable>git</executable>
                  <arguments>
                    <argument>submodule</argument>
                    <argument>update</argument>
                    <argument>--init</argument>
                    <argument>--remote</argument>
                    <argument>--force</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
